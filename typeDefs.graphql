
    scalar DateTime

    enum PhotoCategory{
        SELFIE
        PORTRAIT
        ACTION
        LANDSCAPE
        GRAPHIC
    }

    input PostPhotoInput{
        name: String!
        category: PhotoCategory=PORTRAIT
        description: String
    }

    type Query{
        me:User,
        totalPhotos:Int!
        allPhotos(after:DateTime):[Photo!]!
        allUsers:[User!]!
        totalUsers:Int!
    }

    type Mutation{
        postPhoto(input:PostPhotoInput!): Photo!
        githubAuth(code: String!):AuthPayload!
        addFakeUsers(count: Int=1):[User!]!
        fakeUserAuth(githubLogin: ID!): AuthPayload!
    }

    type Photo{
        id: ID!
        url: String!
        name: String!
        description: String
        category: PhotoCategory!
        created: DateTime!
        postedBy: User
        taggedUsers: [User!]!
    }

    type User{
        githubLogin: ID!
        name: String
        avatar: String
        githubToken: String
        postedPhotos: [Photo!]!
        inPhotos:[Photo!]!
    }

    type AuthPayload{
        token:String!
        user:User!
    }
